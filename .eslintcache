[{"D:\\www\\gobarber-front\\web\\src\\styles\\global.ts":"1","D:\\www\\gobarber-front\\web\\src\\App.tsx":"2","D:\\www\\gobarber-front\\web\\src\\components\\Input\\index.tsx":"3","D:\\www\\gobarber-front\\web\\src\\components\\Button\\index.tsx":"4","D:\\www\\gobarber-front\\web\\src\\components\\Input\\styles.ts":"5","D:\\www\\gobarber-front\\web\\src\\components\\Button\\styles.ts":"6","D:\\www\\gobarber-front\\web\\src\\index.tsx":"7","D:\\www\\gobarber-front\\web\\src\\pages\\SignUp\\index.tsx":"8","D:\\www\\gobarber-front\\web\\src\\pages\\SignUp\\styles.ts":"9"},{"size":553,"mtime":1611783466856,"results":"10","hashOfConfig":"11"},{"size":213,"mtime":1611784711991,"results":"12","hashOfConfig":"11"},{"size":1515,"mtime":1611806792584,"results":"13","hashOfConfig":"11"},{"size":338,"mtime":1611790626667,"results":"14","hashOfConfig":"11"},{"size":864,"mtime":1611806664973,"results":"15","hashOfConfig":"11"},{"size":450,"mtime":1611791405784,"results":"16","hashOfConfig":"11"},{"size":199,"mtime":1611783179975,"results":"17","hashOfConfig":"11"},{"size":1795,"mtime":1611807577727,"results":"18","hashOfConfig":"11"},{"size":1316,"mtime":1611797343598,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ymrvms",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\www\\gobarber-front\\web\\src\\styles\\global.ts",[],"D:\\www\\gobarber-front\\web\\src\\App.tsx",["39"],"D:\\www\\gobarber-front\\web\\src\\components\\Input\\index.tsx",["40"],"import React, { InputHTMLAttributes, useCallback, useEffect, useRef, useState } from 'react'\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { Container } from './styles';\r\nimport { useField } from '@unform/core';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    name: string;\r\n    icon: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ name ,icon: Icon, ...rest}) => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [isFilled, setisFilled] = useState(false);\r\n\r\n    const { fieldName, error, defaultValue, registerField } = useField(name);\r\n\r\n    const handleInputFocus = useCallback(() => {\r\n        setIsFocused(true)\r\n    },[])\r\n\r\n    const handleInputBlur = useCallback(() => {\r\n        setIsFocused(false)\r\n\r\n        setisFilled(!!inputRef.current?.value)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        registerField({\r\n            name: fieldName,\r\n            ref: inputRef.current,\r\n            path: 'value',\r\n        });\r\n    },[fieldName, registerField])\r\n\r\n    return (\r\n        <Container isFilled={isFilled} isfocused={isFocused} >\r\n            { Icon && <Icon size={20} /> }\r\n            <input \r\n                onFocus={handleInputFocus}\r\n                onBlur={handleInputBlur}\r\n                defaultValue={defaultValue} \r\n                ref={inputRef} \r\n                {...rest} \r\n            />\r\n        </Container>\r\n    )\r\n}\r\nexport default Input;","D:\\www\\gobarber-front\\web\\src\\components\\Button\\index.tsx",[],"D:\\www\\gobarber-front\\web\\src\\components\\Input\\styles.ts",[],"D:\\www\\gobarber-front\\web\\src\\components\\Button\\styles.ts",[],"D:\\www\\gobarber-front\\web\\src\\index.tsx",[],"D:\\www\\gobarber-front\\web\\src\\pages\\SignUp\\index.tsx",[],"D:\\www\\gobarber-front\\web\\src\\pages\\SignUp\\styles.ts",[],{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":14},{"ruleId":"41","severity":1,"message":"45","line":17,"column":24,"nodeType":"43","messageId":"44","endLine":17,"endColumn":29},"@typescript-eslint/no-unused-vars","'SignIn' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used."]